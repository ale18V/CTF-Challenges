from Crypto.Util.number import long_to_bytes
from pwn import process, remote
from myTubes import MyTube
from sys import argv

class XORCryptographer(object):
    def __init__(self, key: bytes) -> None:
        self.key = bytes(key)

    @staticmethod
    def xor(a: bytes, b: bytes):
        a = bytes(a)
        b = bytes(b)
        return bytes(a[i % len(a)] ^ b[i] for i in range(len(b)))

    def encrypt(self, message: bytes):
        return XORCryptographer.xor(self.key, message)

    def decrypt(self, message: bytes):
        return XORCryptographer.xor(self.key, message)

#p = process("python3 ./challenge.py", shell=True)
HOST = argv[1] if len(argv) > 1 else "localhost"
PORT = argv[2] if len(argv) > 2 else 10100
p = remote(HOST, PORT)
t = MyTube(p)
p.recvuntil(b"> ")
p.sendline(b"1")
p.recvuntil(b"Message: ")
message = 'a' * 1024
p.sendline(message)
enc = bytes.fromhex(p.recvline()[:-1].decode())
key = XORCryptographer.xor(enc, message.encode())
p.recvuntil(b"> ")
p.sendline(b"2")
encflag = bytes.fromhex(p.recvline()[:-1].decode())
flag = XORCryptographer.xor(key, encflag)
print(flag)



